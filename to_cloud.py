import fbextract, gspread,datetime
from google.oauth2.service_account import Credentials



def to_cloud(file_to_cloud):
    result=[]
    try:
        # üìå –ü–∞—Ä–∞–º–µ—Ç—Ä–∏
        DAYS = 7
        # SPREADSHEET_ID = '1DsiSD8rZbwr-rP9K86H2n6h7ijj4IXEO9G4g66dzSb8'  # —Ç–≤—ñ–π —Ñ–∞–π–ª
        # SHEET_NAME = '–°–ø–∏—Å–æ–∫'  # –∞–±–æ –Ω–∞–∑–≤–∞ –∞—Ä–∫—É—à–∞

        # üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è
        # gc = gspread.service_account(filename='creds/credentials.json')
        # sh = gc.open_by_key(SPREADSHEET_ID)
        # sheet = sh.worksheet(SHEET_NAME)

        # –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –¥–æ—Å—Ç—É–ø—É
        SCOPES = ['https://www.googleapis.com/auth/spreadsheets']
        # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è
        creds = Credentials.from_service_account_file("creds/credentials.json", scopes=SCOPES)
        client = gspread.authorize(creds)
        # –í—ñ–¥–∫—Ä–∏—Ç–∏ —Ç–∞–±–ª–∏—Ü—é –∑–∞ –Ω–∞–∑–≤–æ—é
        # sh = gc.open("transport")  # –∞–±–æ .open_by_url(...)
        # sh = gc.open_by_key("1iIhAaIoHz2bU18QKw6xis3MxohBDxwmkCHlb852NFco")
        # url ='https://docs.google.com/spreadsheets/d/1DsiSD8rZbwr-rP9K86H2n6h7ijj4IXEO9G4g66dzSb8/edit?gid=0#gid=0'
        # sh = client.open_by_url(url)
        sh = client.open_by_key(file_to_cloud)
        sheet = sh.sheet1
        result.append(f"‚û°Ô∏è{datetime.datetime.now()} --üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è  –û–ö")

        # üì¶ –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö —ñ–∑ Firebird
        con = fbextract.get_connection()
        cur = con.cursor()
        result.append(f"‚û°Ô∏è{datetime.datetime.now()} --üì¶ –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö —ñ–∑ Firebird ....")

        # üöó –û—Å–Ω–æ–≤–Ω–∞ —Ç–∞–±–ª–∏—Ü—è
        cur.execute("SELECT * FROM V_CARS order by car_id")
        main_data = cur.fetchall()
        result.append(f"‚û°Ô∏è{datetime.datetime.now()} --- üöó –û—Å–Ω–æ–≤–Ω–∞ —Ç–∞–±–ª–∏—Ü—è ....")

        # üß† –ó–∞–≥–æ–ª–æ–≤–∫–∏
        headers = [desc[0] for desc in cur.description]
        result.append(f"‚û°Ô∏è{datetime.datetime.now()} --- üß† –ó–∞–≥–æ–ª–æ–≤–∫–∏ ....")

        # üìÖ –î—ñ–∞–ø–∞–∑–æ–Ω –¥–∞—Ç –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å
        start_date = datetime.datetime.now().date()
        date_headers = [(start_date + datetime.timedelta(days=i)).strftime('%d.%m.%Y') for i in range(DAYS)]
        result.append(f"‚û°Ô∏è{datetime.datetime.now()} --- üìÖ –î—ñ–∞–ø–∞–∑–æ–Ω –¥–∞—Ç –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å ....")

        # üìñ –ë—Ä–æ–Ω—é–≤–∞–Ω–Ω—è
        cur.execute("SELECT mil_num, date_, bat_order FROM v_BOOKING")
        rows = cur.fetchall()
        result.append(f"‚û°Ô∏è{datetime.datetime.now()} --- üìñ –ë—Ä–æ–Ω—é–≤–∞–Ω–Ω—è ....")

        # üîç –û–±—Ä–æ–±–∫–∞ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è
        booking_dict = {}
        for mil_num, date_, bat_order in rows:
            date_str = date_.strftime('%d.%m.%Y')
            booking_dict.setdefault(mil_num.strip(), {})[date_str] = bat_order
        result.append(f"‚û°Ô∏è{datetime.datetime.now()} --- üîç –û–±—Ä–æ–±–∫–∞ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è ....")

        # üß± –ü–æ–±—É–¥–æ–≤–∞ –ø–æ–≤–Ω–æ—ó —Ç–∞–±–ª–∏—Ü—ñ
        output = []
        header_row = headers + ['–†–ï–ó–ï–†–í'] + date_headers
        output.append(header_row)


        for row in main_data:
            mil = row[1].strip()
            bookings = booking_dict.get(mil, {})
            reserved_flag = '–¢–ê–ö' if bookings else ''
            booking_row = [bookings.get(d, '') for d in date_headers]
            output.append(list(row) + [reserved_flag] + booking_row)
        result.append(f"‚û°Ô∏è{datetime.datetime.now()} --- üß± –ü–æ–±—É–¥–æ–≤–∞ –ø–æ–≤–Ω–æ—ó —Ç–∞–±–ª–∏—Ü—ñ –û–ö")

        # üìù –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≤ Google Sheets
        # ‚ùó –ù–µ –æ—á–∏—â–∞—î–º–æ –∑–∞–≥–æ–ª–æ–≤–∫–∏ ‚Äî —Ç—ñ–ª—å–∫–∏ –¥–∞–Ω—ñ
        # –û—Ç—Ä–∏–º–∞—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ä—è–¥–∫—ñ–≤, –≤–∏–¥–∞–ª–∏–º–æ —Å—Ç–∞—Ä—ñ –¥–∞–Ω—ñ –∑ –¥—Ä—É–≥–æ–≥–æ —Ä—è–¥–∫–∞ –≤–Ω–∏–∑
        num_rows = len(sheet.get_all_values())
        if num_rows > 1:
            sheet.batch_clear([f"A2:Z{num_rows}"])
        values = [list(row) for row in output]
        sheet.update(range_name="A2", values=values)
        # print(f"‚úÖÔ∏è{datetime.datetime.now()} –ó–∞–ø–∏—Å –û–ö ")
        result.append(f"‚úÖÔ∏è{datetime.datetime.now()} -- –ó–∞–ø–∏—Å –û–ö ")
        print(f"‚è©{datetime.datetime.now()} ==== END TO CLOUD ========================================================")
        return result
    except Exception as e:
        print(f"‚è©{datetime.datetime.now()} ==== BEGIN TO CLOUD ======================================================")
        return str(e)

    # except Exception as e:
    #     result.append(f" ‚ùó{datetime.datetime.now()} -- ERROR: {str(e)}  ")
    # return result