
import pandas as pd,io,os,time,fbextract,datetime,warnings
import gspread
from google.oauth2.service_account import Credentials
from googleapiclient.discovery import build
from googleapiclient.http import MediaIoBaseDownload





delay = os.getenv("DELAY", 1)

def readdisk():
    # üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –¥–æ Google Drive
    SCOPES = ['https://www.googleapis.com/auth/drive']
    creds = Credentials.from_service_account_file('credentials.json', scopes=SCOPES)
    drive_service = build('drive', 'v3', credentials=creds)

    # üîç –ó–Ω–∞–π—Ç–∏ –≤—Å—ñ .xlsx —Ñ–∞–π–ª–∏ –≤ –ø–µ–≤–Ω—ñ–π –ø–∞–ø—Ü—ñ
    FOLDER_ID = '13ixPu84zGwKSqMOZUUvcXjryrCljUbpV'

    query = f"'{FOLDER_ID}' in parents and mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'"
    results = drive_service.files().list(q=query, fields="files(id, name)").execute()
    files = results.get('files', [])
    # –û–°–ù–û–í–ù–ò–ô –¶–ò–ö–õ - –î–ª—è –∫–æ–∂–Ω–æ–≥–æ  —Ñ–∞–π–ª—É ===============================================================================
    print(f"‚è©{datetime.datetime.now()} ==== BEGIN ===============================================================")
    for file in files:

        file_id = file['id']
        file_name = file['name']

        print(f"‚è©{datetime.datetime.now()} - –ó–Ω–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª: {file_name}")
        if file_name.startswith("processed"):
            print(f"‚è©{datetime.datetime.now()} - –¶–µ–π —Ñ–∞–π–ª –≤–∂–µ –æ–±—Ä–æ–±–ª–µ–Ω–æ - –ø—Ä–æ–ø—É—Å–∫–∞—é")
        else:
            if file_name.startswith("UPD"):
                print(f"‚è©{datetime.datetime.now()} -- –§–∞–π–ª –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö - –ø–æ—á–∏–Ω–∞—é –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è")
                read_update(file_name,file_id,drive_service)
            if file_name.startswith("INS"):
                print(f"‚è©{datetime.datetime.now()} -- –§–∞–π–ª –¥–æ–¥–∞–≤–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö - –ø–æ–∫–∏ —â–æ –Ω–µ —Ä–µ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ, –ø—Ä–æ–ø—É—Å–∫–∞—é")
            else:
                print(f"‚è©{datetime.datetime.now()} -- –Ω–µ–≤—ñ–¥–æ–º–∏–π —Ñ–∞–π–ª - –ø—Ä–æ–ø—É—Å–∫–∞—é")

    print(f"‚è©{datetime.datetime.now()} ===== END ================================================================")
#######################################################################################################################
def read_update(file_name,file_id,drive_service):
    print(f"‚è©{datetime.datetime.now()} - –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∑ —Ñ–∞–π–ª—É: {file_name}")

    print(f"üì•Ô∏è{datetime.datetime.now()} -- –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—É")
    #  –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—É
    request = drive_service.files().get_media(fileId=file_id)
    fh = io.BytesIO()
    downloader = MediaIoBaseDownload(fh, request)
    done = False
    while not done:
        status, done = downloader.next_chunk()

    print(f"üîå{datetime.datetime.now()} -- –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ Firebird")
    # üîå –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ Firebird
    con = fbextract.get_connection()
    cur = con.cursor()

    print(f"üîå{datetime.datetime.now()} --- –ó–∞–ø–∏—Å —Ñ–∞–π–ª—É –≤ UPD_FILES")
    file_bytes = fh.getvalue()  # <-- BLOB----------------------
    cur.execute('execute procedure LOAD_FILE (?,?)', [file_name, file_bytes])
    fh.seek(0)

    print(f"üìä{datetime.datetime.now()} --- –ß–∏—Ç–∞–Ω–Ω—è Excel")
    # üìä –ß–∏—Ç–∞–Ω–Ω—è Excel
    warnings.filterwarnings("ignore", category=UserWarning)
    df = pd.read_excel(fh)
    # –î–ª—è –∫–æ–∂–Ω–æ–≥–æ —Ä—è–¥–∫–∞ –≤ —Ñ–∞–π–ª—ñ --------------------------------------------------------------
    for _, row in df.iterrows():
        cur.execute(' execute procedure LOAD_DATA (?,?,?,?,?,?,?,?)',
        [file_name, row.iloc[0], row.iloc[1], row.iloc[2], row.iloc[3], row.iloc[4], row.iloc[5], row.iloc[6]])
    # -----------------------------------------------------------------------------------------
    print(f"üìä{datetime.datetime.now()} --- –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–∞–ø–∏—Å—ñ–≤ –≤ UPD_DATA")
    con.commit()

    # –æ–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –≤ –ë–î
    print(f"‚û°Ô∏è{datetime.datetime.now()} --- –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≤ CARS ")
    res = []
    try:
        cur.execute("EXECUTE PROCEDURE CARS_UPD")
        res = cur.fetchone()
        print(f"‚úÖ{datetime.datetime.now()} --- –û–Ω–æ–≤–ª–µ–Ω–æ –∑–∞–ø–∏—Å—ñ–≤: {res[0]}")

        # —è–∫—â–æ —î –∑–º—ñ–Ω–∏ - –æ–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–±–ª–∏—Ü—é –∑–∞–≥–∞–ª—å–Ω—É –≤ —Ö–º–∞—Ä—ñ
        if res[0] != None:
            con.commit()
            writefile()
            # üè∑ –ü–µ—Ä–µ–π–º–µ–Ω—É–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—É
            new_name = 'processed_' + file_name
            drive_service.files().update(fileId=file_id, body={'name': new_name}).execute()
            print(f"‚úÖ{datetime.datetime.now()} –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ —Ç–∞ –ø–µ—Ä–µ–π–º–µ–Ω–æ–≤–∞–Ω–æ: {new_name}")
    except Exception as e:
        print(f"‚ùå{datetime.datetime.now()} ERROR: {str(e)}")
    cur.close()
    con.close()
    print(f"‚úÖ{datetime.datetime.now()} -- –ó–∞–∫—Ä–∏—Ç–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è")
####################################################################################################################



def writefile():

    # –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –¥–æ—Å—Ç—É–ø—É
    SCOPES = ['https://www.googleapis.com/auth/spreadsheets']
    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è
    creds = Credentials.from_service_account_file("credentials.json", scopes=SCOPES)
    client = gspread.authorize(creds)
    # –í—ñ–¥–∫—Ä–∏—Ç–∏ —Ç–∞–±–ª–∏—Ü—é –∑–∞ –Ω–∞–∑–≤–æ—é ## 1iIhAaIoHz2bU18QKw6xis3MxohBDxwmkCHlb852NFco
    # sh = gc.open("transport")  # –∞–±–æ .open_by_url(...)
    # sh = gc.open_by_key("1iIhAaIoHz2bU18QKw6xis3MxohBDxwmkCHlb852NFco")
    # ‚úÖ –í–°–¢–ê–í –°–Æ–î–ò URL (–æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ –ø–æ–≤–Ω–∏–π!)
    url ='https://docs.google.com/spreadsheets/d/10Ft5t3q6QMCh_ou9mqfufYd7l6Ic70JdhUNOdsQFpHk/edit?gid=0#gid=0'
    sh = client.open_by_url(url)

    ############################################
    print(f"‚û°Ô∏è{datetime.datetime.now()} –ó–∞–ø–∏—Å –¥–µ–ª—å—Ç–∏ ... ")
    # –î–∞–Ω—ñ –¥–ª—è –∑–∞–ø–∏—Å—É
    sql = ' select * from v_cars'
    rows = fbextract.get_data(sql,[])
    # –û—á–∏—Å—Ç–∏—Ç–∏ —Å—Ç–∞—Ä—ñ –¥–∞–Ω—ñ (–æ–ø—Ü—ñ–π–Ω–æ)
    # –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –ª–∏—Å—Ç
    sheet = sh.sheet1  # –ø–µ—Ä—à–∏–π –∞—Ä–∫—É—à
    # sheet = client.open("Products Sync").sheet1

    # ‚ùó –ù–µ –æ—á–∏—â–∞—î–º–æ –∑–∞–≥–æ–ª–æ–≤–∫–∏ ‚Äî —Ç—ñ–ª—å–∫–∏ –¥–∞–Ω—ñ
    # –û—Ç—Ä–∏–º–∞—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ä—è–¥–∫—ñ–≤, –≤–∏–¥–∞–ª–∏–º–æ —Å—Ç–∞—Ä—ñ –¥–∞–Ω—ñ –∑ –¥—Ä—É–≥–æ–≥–æ —Ä—è–¥–∫–∞ –≤–Ω–∏–∑
    num_rows = len(sheet.get_all_values())
    if num_rows > 1:
        sheet.batch_clear([f"A2:Z{num_rows}"])

    # –ó–∞–ø–∏—Å–∞—Ç–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∏ + –¥–∞–Ω—ñ
    # for row in rows:
    #     worksheet.append_row(list(row))
    # values = ([["CAR_ID","MIL_NUM","CARTYPE_NAME","BRAND","DIVISION_NAME","STATUS_NAME","STATE_NAME","SEATS","W_FORM","DRIVER","LOCATION","NOTES"]]
    #           + [list(row) for row in rows])
    values = [list(row) for row in rows]
    sheet.update(range_name="A2", values=values)
    print(f"‚úÖÔ∏è{datetime.datetime.now()} –ó–∞–ø–∏—Å –û–ö ")


# schedule.every(1).minutes.do(readfiles())
# if __name__ == '__main__':

# readdisk()

while True:
    # schedule.run_pending()
    try:
        readdisk()
    #     readfiles()
        time.sleep(int(delay)*60)
    #     # writefile()
    except Exception as e:
        print(f"‚õîÔ∏è{datetime.datetime.now()} -{str(e)} ")
