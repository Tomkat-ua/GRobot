import gspread
from oauth2client.service_account import ServiceAccountCredentials
from googleapiclient.discovery import build
import fbextract,datetime
from google.oauth2.service_account import Credentials

def proc_file(file_name,sheet):
    # 2. –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –∞—Ä–∫—É—à
    # sheet = client.open("–ê–≤—Ç–æ–º–æ–±—ñ–ª—ñ_1–Ñ–ë").sheet1
    # sheet = client.open(file_name).sheet1
    data = sheet.get_all_values()

    # 3. –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ Firebird
    con = fbextract.get_connection()
    cur = con.cursor()

    # 4. –û–±—Ä–æ–±–∫–∞ –∑–º—ñ–Ω–µ–Ω–∏—Ö —Ä—è–¥–∫—ñ–≤
    ch = 0 ## –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∑–º—ñ–Ω –≤ —Ñ–∞–π–ª—ñ
    header = data[0]
    for i, row in enumerate(data[1:], start=2):  # –∑ –¥—Ä—É–≥–æ–≥–æ —Ä—è–¥–∫–∞
        if len(row) < len(header):
            row += [''] * (len(header) - len(row))  # –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –ø–æ—Ä–æ–∂–Ω—ñ—Ö
        record = dict(zip(header, row))
        if record.get('sync_status') == '–ó–º—ñ–Ω–µ–Ω–æ':
            # –í—Å—Ç–∞–≤–∫–∞ –∞–±–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è ‚Äî –ø—Ä–∏–∫–ª–∞–¥:
            # cur.execute(" UPDATE CARS set driver = ? WHERE car_id = ?", [record['–≤–æ–¥—ñ–π'],int(record['car_id'])])
            # print(row)
            cur.execute(' execute procedure LOAD_DATA (?,?,?,?,?,?,?,?)',
             [file_name, record['–≤—ñ–π—Å—å–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä'], record['–ø—ñ–¥—Ä–æ–∑–¥—ñ–ª'], record['—Å—Ç–∞—Ç—É—Å'], record['—Ç–µ—Ö —Å—Ç–∞–Ω'],
              record['–≤–æ–¥—ñ–π'], record['–ª–æ–∫–∞—Ü—ñ—è'],record['–ø—Ä–∏–º—ñ—Ç–∫–∏']])

            # –û—á–∏—â–∞—î–º–æ –º—ñ—Ç–∫—É
            # sheet.update(f'E{i}', [['–æ–∫']])  # sync_status –≤ –∫–æ–ª–æ–Ω—Ü—ñ E
            sheet.update(range_name=f'A{i}', values=[['O–∫']])
            ch = ch + 1
            print(f"  ‚úÖÔ∏è{datetime.datetime.now()}: –û–Ω–æ–≤–ª–µ–Ω–æ: —Ä—è–¥–æ–∫ {i}, –Ω–æ–º–µ—Ä  {record['–≤—ñ–π—Å—å–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä']}")
    # 5. –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è
    print(f"  ‚úÖÔ∏è{datetime.datetime.now()}: {file_name} - –û–±—Ä–æ–±–ª–µ–Ω–æ, –∑–º—ñ–Ω–∏ - {ch}")
    con.commit()
    con.close()
    return ch


def to_cloud():
    try:
        print(f"‚è©{datetime.datetime.now()} ==== BEGIN TO CLOUD ======================================================")
        result = []
        # –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –¥–æ—Å—Ç—É–ø—É
        SCOPES = ['https://www.googleapis.com/auth/spreadsheets']
        # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è
        creds = Credentials.from_service_account_file("creds/credentials.json", scopes=SCOPES)
        client = gspread.authorize(creds)
        # –í—ñ–¥–∫—Ä–∏—Ç–∏ —Ç–∞–±–ª–∏—Ü—é –∑–∞ –Ω–∞–∑–≤–æ—é ## 1iIhAaIoHz2bU18QKw6xis3MxohBDxwmkCHlb852NFco
        # sh = gc.open("transport")  # –∞–±–æ .open_by_url(...)
        # sh = gc.open_by_key("1iIhAaIoHz2bU18QKw6xis3MxohBDxwmkCHlb852NFco")
        # ‚úÖ –í–°–¢–ê–í –°–Æ–î–ò URL (–æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ –ø–æ–≤–Ω–∏–π!)
        url ='https://docs.google.com/spreadsheets/d/10Ft5t3q6QMCh_ou9mqfufYd7l6Ic70JdhUNOdsQFpHk/edit?gid=0#gid=0'
        sh = client.open_by_url(url)

        ############################################
        result.append(f"‚û°Ô∏è{datetime.datetime.now()} -- –ó–∞–ø–∏—Å –¥–µ–ª—å—Ç–∏ ... ")
        # –î–∞–Ω—ñ –¥–ª—è –∑–∞–ø–∏—Å—É
        sql = ' select * from v_cars'
        rows = fbextract.get_data(sql,[])
        # –û—á–∏—Å—Ç–∏—Ç–∏ —Å—Ç–∞—Ä—ñ –¥–∞–Ω—ñ (–æ–ø—Ü—ñ–π–Ω–æ)
        # –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –ª–∏—Å—Ç
        sheet = sh.sheet1  # –ø–µ—Ä—à–∏–π –∞—Ä–∫—É—à
        # sheet = client.open("Products Sync").sheet1

        # ‚ùó –ù–µ –æ—á–∏—â–∞—î–º–æ –∑–∞–≥–æ–ª–æ–≤–∫–∏ ‚Äî —Ç—ñ–ª—å–∫–∏ –¥–∞–Ω—ñ
        # –û—Ç—Ä–∏–º–∞—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ä—è–¥–∫—ñ–≤, –≤–∏–¥–∞–ª–∏–º–æ —Å—Ç–∞—Ä—ñ –¥–∞–Ω—ñ –∑ –¥—Ä—É–≥–æ–≥–æ —Ä—è–¥–∫–∞ –≤–Ω–∏–∑
        num_rows = len(sheet.get_all_values())
        if num_rows > 1:
            sheet.batch_clear([f"A2:Z{num_rows}"])

        # –ó–∞–ø–∏—Å–∞—Ç–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∏ + –¥–∞–Ω—ñ
        # for row in rows:
        #     worksheet.append_row(list(row))
        # values = ([["CAR_ID","MIL_NUM","CARTYPE_NAME","BRAND","DIVISION_NAME","STATUS_NAME","STATE_NAME","SEATS","W_FORM","DRIVER","LOCATION","NOTES"]]
        #           + [list(row) for row in rows])
        values = [list(row) for row in rows]
        sheet.update(range_name="A2", values=values)
        # print(f"‚úÖÔ∏è{datetime.datetime.now()} –ó–∞–ø–∏—Å –û–ö ")
        result.append(f"‚úÖÔ∏è{datetime.datetime.now()} -- –ó–∞–ø–∏—Å –û–ö ")
        for row in result:
            print(row)
        print(f"‚è©{datetime.datetime.now()} ==== END TO CLOUD ========================================================")
        return result
    except Exception as e:
        print(f"‚è©{datetime.datetime.now()} ==== BEGIN TO CLOUD ======================================================")
        return str(e)

def from_cloud():
    print(f"‚è©{datetime.datetime.now()} ==== BEGIN FROM CLOUD ======================================================")
    # 1. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è Google Sheets
    scope = ['https://www.googleapis.com/auth/drive']
    creds = ServiceAccountCredentials.from_json_keyfile_name('creds/credentials.json', scope)
    client = gspread.authorize(creds)
    drive_service = build('drive', 'v3', credentials=creds)
    # print(drive_service)

    # üîç –ó–Ω–∞–π—Ç–∏ –≤—Å—ñ —Ñ–∞–π–ª–∏ –≤ –ø–µ–≤–Ω—ñ–π –ø–∞–ø—Ü—ñ
    files = drive_service.files().list(q="mimeType='application/vnd.google-apps.spreadsheet'",
                                        fields="files(id, name, mimeType)").execute()
    gch = 0
    for f in files.get('files', []): # <-- —Ü–∏–∫–ª –ø–æ —Å–ø–∏—Å–∫—É —Ñ–∞–π–ª—ñ–≤
        file_name = f['name']
        if file_name.startswith("–ê–≤—Ç–æ–º–æ–±—ñ–ª—ñ"):
            print(f" ‚è©{datetime.datetime.now()}: {f['name']} - {f['id']}")
            sheet = client.open(file_name).sheet1
            gch = gch + proc_file(file_name,sheet) # <-- –æ–±—Ä–æ–±–∫–∞ –æ–¥–Ω–æ–≥–æ  —Ñ–∞–π–ª—É
    print(f" ‚è©{datetime.datetime.now()} - –í—Å—å–æ–≥–æ –∑–º—ñ–Ω - {gch}")
    print(f"‚è©{datetime.datetime.now()} ===== END FROM CLOUD========================================================")
    return gch

def main_cycle():
    try:
        ch_cloud = from_cloud()
        if ch_cloud > 0:
            to_cloud()
    except Exception as e:
        print(str(e))


# from_cloud() # <--  test mode